-------------- 画图片 ---------------

drawImage( image, x, y )----------------img对象/canvas对象，起始坐标

例：
var img=new Image(); // 创建了一个Image对象

img.src="http://timgsa.baidu.com";

img.onload=function(){

    这里绘制图片也可以使用 从页面获取的 Img dom对象，如:  ctx.drawImage(document.getElementsByTagName("img")[0],100,100,300,190);

    ctx.drawImage( img, 50, 50, 300, 190); //将图片绘制到canvas中
}

---------------- 图片导出/下载 --------------------

c.toDataURL()

举例：

<!DOCTYPE html>
<html>
<head lang="en">
    <meta charset="UTF-8">
    <title></title>
    <style>
        *{margin: 0;padding: 0}
        body{
            margin: 30px;
        }
        canvas{
            border: 1px solid #a4e2f9;
            float: left;
        }
        img{
            float:left;
            margin: 0 10px;
        }

    </style>
</head>
<body>
    <canvas height="300" width="300" id="myCanvas"></canvas>
    <img id="showImg" src="" alt=""/>
    <a id="downloadBtn" href="" download="testImg">下载</a>
    <!-- a标签设置 download="图片名称" 来设置点击下载 -->
    

    <script>
        var c = document.getElementById("myCanvas");
        var ctx = c.getContext("2d");

        ctx.fillStyle = "#fd0";
        ctx.fillRect(0,0,150,37.5);
        ctx.fillStyle = "#6c0";
        ctx.fillRect(0,37,150,37.5);
        ctx.fillStyle = "#09f";
        ctx.fillRect(0,75,150,37.5);
        ctx.fillStyle = "#f30";
        ctx.fillRect(0,112,150,37.5);
        ctx.fillStyle = "#fff";
        for(var i=0; i<10; i++){
            ctx.fillStyle = "rgba(255, 255, 255,"+ (i+1)/10 +")";
            for(var j=0; j<4; j++){
                ctx.fillRect(5+i*14, 5+j*37.5, 14, 27.5);
            }
        }
        
        //将canvas生成的图像 链接到 img标签  和 a标签下载链接中
        document.getElementById("showImg").setAttribute("src",c.toDataURL('png')); //输出为png格式
        document.getElementById("downloadBtn").setAttribute("href",c.toDataURL('png'));

    </script>
</body>
</html>