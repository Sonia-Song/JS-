Object.prototype.toString.call()方法用来判断对象属于哪种内置类型。

1、判断基本类型

Object.prototype.toString.call(null); //"[object Null]"
Object.prototype.toString.call(undefined);//[object Undefined]
Object.prototype.toString.call("abc");//[object String]
Object.prototype.toString.call(123)[object Number]
Object.prototype.toString.call(true)//[object Boolean]

2、判断原生引用类型

** 函数类型 **
Function fn(){
    console.log("test")
}
object.prototype.toString.call(fn);//[object Function]

** 日期类型 **
var date=new Date();
Object.prototype.toString.call(date);//[object Date]

** 数组类型 **
var arr=[1,2,3];
Object.prototype.toString.call(arr);//[object Array]

** 正则表达式 **
var reg=/[hbc]at/gi;
Object.prototype.toString.call(reg);//[object RegExp]

** 自定义类型 **
function Person(name, age){
    this.name=name;
    this.age=age;
}
var person=new Person("Rose",18);
Object.prototype.toString.call(arr);//[object Object] ××××
console.log(person instanceof Person);//true

3、判断原生JSON对象

var isNativeJSON=window.JSON && Object.prototype.toString.call(JSON);
console.log(isNativeJSON);//输出结果为【object JSON】，说明JSON是原生的，否则不是！
